<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ask.qa_service.dao.AskQuestionDao">
    <resultMap id="BaseResultMap" type="com.ask.qa_service.entity.po.AskQuestionPo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="question_no" jdbcType="VARCHAR" property="questionNo"/>
        <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime"/>
        <result column="question_title" jdbcType="VARCHAR" property="questionTitle"/>
        <result column="votes" jdbcType="INTEGER" property="votes"/>
        <result column="answers" jdbcType="INTEGER" property="answers"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="asked_by" jdbcType="VARCHAR" property="askedBy"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>

        <result column="question_content" jdbcType="VARCHAR" property="questionContent"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, question_no, publish_time, question_title, votes, answers, views, tags, asked_by
    </sql>

    <sql id="Base_Column_List_t">
        question.id,
        question.question_no,
        question.publish_time,
        question.question_title,
        question.votes,
        question.answers,
        question.views,
        question.tags,
        question.asked_by
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ask_question
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByQuestionNo" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List_t"/>
        , content.question_content
        from ask_question question
        left join ask_question_content content
        on question.question_no = content.question_no
        where question.question_no = #{questionNo}
    </select>

    <select id="selectByCount" resultMap="BaseResultMap" parameterType="integer">
        select
        <include refid="Base_Column_List_t"/>,
        content.question_content
        from ask_question question
        left join ask_question_content content
        on question.question_no = content.question_no
        limit #{count}
    </select>

    <select id="selectQuestionByCreateTime" resultMap="BaseResultMap" parameterType="integer">
        select
        <include refid="Base_Column_List_t"/>,
        content.question_content
        from ask_question question
        left join ask_question_content content
        on question.question_no = content.question_no
        order by question.created_time desc
        limit #{count}
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from ask_question
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from ask_question
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByQuestionNo" parameterType="string">
        delete
        from ask_question
        where question_no = #{questionNo}
    </delete>

    <insert id="insert" parameterType="com.ask.qa_service.entity.po.AskQuestionPo">
        insert into ask_question (id,
                                  question_no,
                                  question_title,
                                  publish_time,
                                  votes,
                                  answers,
                                  views,
                                  tags,
                                  asked_by,
                                  created_by,
                                  updated_by)
        values (#{id,jdbcType=VARCHAR},
                #{questionNo,jdbcType=VARCHAR},
                #{questionTitle,jdbcType=VARCHAR},
                #{publishTime,jdbcType=TIMESTAMP},
                #{votes,jdbcType=INTEGER},
                #{answers,jdbcType=INTEGER},
                #{views,jdbcType=INTEGER},
                #{tags,jdbcType=VARCHAR},
                #{askedBy,jdbcType=VARCHAR},
                #{createdBy,jdbcType=VARCHAR},
                #{updatedBy,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.ask.qa_service.entity.po.AskQuestionPo">
        insert into ask_question
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="questionNo != null">
                question_no,
            </if>
            <if test="publishTime != null">
                publish_time,
            </if>
            <if test="questionTitle != null">
                question_title,
            </if>
            <if test="votes != null">
                votes,
            </if>
            <if test="answers != null">
                answers,
            </if>
            <if test="views != null">
                views,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="askedBy != null">
                asked_by,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="questionNo != null">
                #{questionNo,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionTitle != null">
                #{questionTitle},
            </if>
            <if test="votes != null">
                #{votes,jdbcType=INTEGER},
            </if>
            <if test="answers != null">
                #{answers,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                #{views,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="askedBy != null">
                #{askedBy,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ask.qa_service.entity.po.AskQuestionPo">
        update ask_question
        <set>
            <if test="questionNo != null">
                question_no = #{questionNo,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionTitle != null">
                question_title = #{questionTitle,jdbcType=VARCHAR},
            </if>
            <if test="votes != null">
                votes = #{votes,jdbcType=INTEGER},
            </if>
            <if test="answers != null">
                answers = #{answers,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                views = #{views,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="askedBy != null">
                asked_by = #{askedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ask.qa_service.entity.po.AskQuestionPo">
        update ask_question
        set question_no    = #{questionNo,jdbcType=VARCHAR},
            publish_time   = #{publishTime,jdbcType=TIMESTAMP},
            question_title = #{questionTontent,jdbcType=VARCHAR},
            votes          = #{votes,jdbcType=INTEGER},
            answers        = #{answers,jdbcType=INTEGER},
            views          = #{views,jdbcType=INTEGER},
            tags           = #{tags,jdbcType=VARCHAR},
            asked_by       = #{askedBy,jdbcType=VARCHAR},
            updated_by     = #{updatedBy,jdbcType=VARCHAR},
            updated_time   = #{updatedTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>