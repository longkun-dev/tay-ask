<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ask.qa_service.dao.AskQuestionContentDao">
    <resultMap id="BaseResultMap" type="com.ask.qa_service.entity.po.AskQuestionContentPo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="question_no" jdbcType="VARCHAR" property="questionNo"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ask.qa_service.entity.po.AskQuestionContentPo">
        <result column="question_content" jdbcType="LONGVARCHAR" property="questionContent"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, question_no, created_by, created_time, updated_by, updated_time
    </sql>

    <sql id="Blob_Column_List">
        question_content
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from ask_question_content
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from try_ask.ask_question_content
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.ask.qa_service.entity.po.AskQuestionContentPo">
        insert into try_ask.ask_question_content (id,
                                                  question_no,
                                                  created_by,
                                                  updated_by,
                                                  question_content)
        values (#{id,jdbcType=VARCHAR},
                #{questionNo,jdbcType=VARCHAR},
                #{createdBy,jdbcType=VARCHAR},
                #{updatedBy,jdbcType=VARCHAR},
                #{questionContent,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.ask.qa_service.entity.po.AskQuestionContentPo">
        insert into try_ask.ask_question_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="questionNo != null">
                question_no,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="questionContent != null">
                question_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="questionNo != null">
                #{questionNo,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="questionContent != null">
                #{questionContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ask.qa_service.entity.po.AskQuestionContentPo">
        update try_ask.ask_question_content
        <set>
            <if test="questionNo != null">
                question_no = #{questionNo,jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionContent != null">
                question_content = #{questionContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ask.qa_service.entity.po.AskQuestionContentPo">
        update try_ask.ask_question_content
        set question_no      = #{questionNo,jdbcType=VARCHAR},
            updated_by       = #{updatedBy,jdbcType=VARCHAR},
            updated_time     = #{updatedTime,jdbcType=TIMESTAMP},
            question_content = #{questionContent,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ask.qa_service.entity.po.AskQuestionContentPo">
        update try_ask.ask_question_content
        set question_no  = #{questionNo,jdbcType=VARCHAR},
            updated_by   = #{updatedBy,jdbcType=VARCHAR},
            updated_time = #{updatedTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>