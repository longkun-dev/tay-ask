<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ask.qa_service.dao.AskUserExtMapper">
  <resultMap id="BaseResultMap" type="com.ask.qa_service.entity.po.AskUserExtPo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="gold_badges" jdbcType="INTEGER" property="goldBadges" />
    <result column="silver_badges" jdbcType="INTEGER" property="silverBadges" />
    <result column="bronze_badges" jdbcType="INTEGER" property="bronzeBadges" />
    <result column="reputation_score" jdbcType="INTEGER" property="reputationScore" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, gold_badges, silver_badges, bronze_badges, reputation_score, created_by, 
    created_time, updated_by, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.ask.qa_service.entity.po.AskUserExtExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ask_user_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ask_user_ext
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ask_user_ext
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ask.qa_service.entity.po.AskUserExtExample">
    delete from ask_user_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ask.qa_service.entity.po.AskUserExtPo">
    insert into ask_user_ext (id, user_id, gold_badges, 
      silver_badges, bronze_badges, reputation_score, 
      created_by, created_time, updated_by, 
      updated_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{goldBadges,jdbcType=INTEGER}, 
      #{silverBadges,jdbcType=INTEGER}, #{bronzeBadges,jdbcType=INTEGER}, #{reputationScore,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ask.qa_service.entity.po.AskUserExtPo">
    insert into ask_user_ext
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goldBadges != null">
        gold_badges,
      </if>
      <if test="silverBadges != null">
        silver_badges,
      </if>
      <if test="bronzeBadges != null">
        bronze_badges,
      </if>
      <if test="reputationScore != null">
        reputation_score,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="goldBadges != null">
        #{goldBadges,jdbcType=INTEGER},
      </if>
      <if test="silverBadges != null">
        #{silverBadges,jdbcType=INTEGER},
      </if>
      <if test="bronzeBadges != null">
        #{bronzeBadges,jdbcType=INTEGER},
      </if>
      <if test="reputationScore != null">
        #{reputationScore,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ask.qa_service.entity.po.AskUserExtExample" resultType="java.lang.Long">
    select count(*) from ask_user_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ask_user_ext
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.goldBadges != null">
        gold_badges = #{record.goldBadges,jdbcType=INTEGER},
      </if>
      <if test="record.silverBadges != null">
        silver_badges = #{record.silverBadges,jdbcType=INTEGER},
      </if>
      <if test="record.bronzeBadges != null">
        bronze_badges = #{record.bronzeBadges,jdbcType=INTEGER},
      </if>
      <if test="record.reputationScore != null">
        reputation_score = #{record.reputationScore,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ask_user_ext
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      gold_badges = #{record.goldBadges,jdbcType=INTEGER},
      silver_badges = #{record.silverBadges,jdbcType=INTEGER},
      bronze_badges = #{record.bronzeBadges,jdbcType=INTEGER},
      reputation_score = #{record.reputationScore,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ask.qa_service.entity.po.AskUserExtPo">
    update ask_user_ext
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="goldBadges != null">
        gold_badges = #{goldBadges,jdbcType=INTEGER},
      </if>
      <if test="silverBadges != null">
        silver_badges = #{silverBadges,jdbcType=INTEGER},
      </if>
      <if test="bronzeBadges != null">
        bronze_badges = #{bronzeBadges,jdbcType=INTEGER},
      </if>
      <if test="reputationScore != null">
        reputation_score = #{reputationScore,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ask.qa_service.entity.po.AskUserExtPo">
    update ask_user_ext
    set user_id = #{userId,jdbcType=VARCHAR},
      gold_badges = #{goldBadges,jdbcType=INTEGER},
      silver_badges = #{silverBadges,jdbcType=INTEGER},
      bronze_badges = #{bronzeBadges,jdbcType=INTEGER},
      reputation_score = #{reputationScore,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>